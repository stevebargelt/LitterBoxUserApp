# Uncomment the line if you want fastlane to automatically update itself
update_fastlane

default_platform(:ios)

platform :ios do

  lane :certificates do
    # match(type: "development", readonly: true)
    match(app_identifier: "com.harebrained-apps.litterboxuser", readonly: true)
  end

  lane :bump_build_version do
    increment_build_number(xcodeproj: './LitterBoxUser.xcodeproj')
    commit_version_bump(message: 'Bump iOS build', xcodeproj: './LitterBoxUser.xcodeproj')
    git_pull
    push_to_git_remote
  end

  lane :matchregister do
    register_devices(devices_file: "./fastlane/devices.txt")
    match(type: "adhoc", force_for_new_devices: true)
  end

  lane :build do
    # build_app(workspace: "LitterBoxUser.xcworkspace", scheme: "LitterBoxUser")
  end
  
  lane :appcenterdist do
    appcenter_upload(
      api_token: ENV["APPCENTER_API_TOKEN"],
      owner_name: ENV["APPCENTER_OWNER_NAME"],
      owner_type: ENV["APPCENTER_OWNER_TYPE"],
      app_name: ENV["APPCENTER_APP_NAME_IOS"],
      ipa: ENV["IPA_PATH"],
      destination_type: "group",
      destinations: "Alpha Testers",
      notify_testers: true
    )
  end

  lane :firebasedist do
    # firebase_app_distribution(
    #   app: "1:46225580206:ios:8e8060d41c0762ca3d0d3f",
    #   testers: "steve@bargelt.com, steven.bargelt@pse.com",
    #   release_notes: "Lots of amazing new features to test out!",
    # )
  end

  desc "Alpha Distribution"
  lane :alpha do
    #ensure_git_status_clean
    #matchregister
    match(type: "adhoc")
    gym(
      scheme: "LitterBoxUser", 
      clean: true, 
      workspace: "./LitterBoxUser.xcworkspace", 
      export_method: "ad-hoc", 
      output_directory: "./builds"
    )
    appcenterdist
  end

  desc "Take screenshots"
  lane :screenshot do
    snapshot
  end

  desc "Push a new beta build to TestFlight"
  lane :beta do
    build_app(workspace: "LitterBoxUser.xcworkspace", scheme: "LitterBoxUser")
    upload_to_testflight
  end
end


desc "Take screenshots"
  lane :screenshot do
    snapshot
  end